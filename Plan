แผนงานรายวัน (เริ่ม 25 ก.ย. 2025 — ส่ง 9 ต.ค. 2025)
25 ก.ย. 2025 (วันนี้)

อ่านโจทย์อีกครั้งให้ชัด (จากรูป) และตัดสินใจรูปแบบ CSV ที่จะใช้ (แถวละสัมมนา + คอลัมน์เก็บชื่อรวมคั่น ; หรือ แถวละคน) — ผมแนะนำ: แถวละสัมมนา และ Participants เก็บชื่อรวมคั่น ;
สร้างโครงร่างโปรเจ็กต์: โฟลเดอร์ seminar_c/ และไฟล์ main.c, csv_io.c, csv_io.h, seminar.c, seminar.h, Makefile
เขียน pseudocode ของ main() และเมนู (ข้อความ/โครงร่าง)

26 ก.ย. 2025

เขียนโครงสร้าง Seminar และ header files (seminar.h)
เขียนฟังก์ชันช่วยเหลือพื้นฐาน (init, free if dynamic)
commit แรกใน git: init project with structs and headers

27 ก.ย. 2025

เขียน load_from_csv() แบบพื้นฐาน (อ่าน header แล้ว parse เป็น Seminar array หรือ list)
สร้างไฟล์ตัวอย่าง sample.csv ที่มี 4–6 แถวสำหรับทดสอบ
ทดสอบว่าโปรแกรมสามารถโหลดและแสดงจำนวนรายการได้

28 ก.ย. 2025

เขียน save_to_csv() เพื่อบันทึกข้อมูลกลับไฟล์ (ทดสอบ overwrite และ save as new file)
ทดสอบ round-trip: โหลด -> เพิ่ม -> save -> โหลดไฟล์ที่ save ตรวจสอบข้อมูล

29 ก.ย. 2025

เขียนฟังก์ชัน display_all() เพื่อโชว์รายละเอียดสัมมนาและรายชื่อผู้เข้าร่วม (แยกชื่อด้วย ;)
ปรับปรุงการจัดรูปแบบการแสดงผล (สวยงาม อ่านง่าย)

30 ก.ย. 2025

เขียนฟังก์ชัน add_seminar() โดยรับ input จากผู้ใช้ (title, date, participants as name1;name2;...)
เพิ่มการตรวจสอบความถูกต้องของวันที่ (รูปแบบ) และจำนวนผู้เข้าร่วมเป็นจำนวนเต็ม

1 ต.ค. 2025

เขียน search_by_title() (ค้นหาแบบ partial match) และทดสอบหลายกรณี
ทำให้ผลลัพธ์แสดง index เพื่อใช้ในการ update/delete

2 ต.ค. 2025

เขียน update_seminar() — แก้ไขข้อมูลสัมมนาตาม index (ให้เลือก field ที่จะแก้ไข)
เขียน delete_seminar() — เอารายการออกจาก array หรือ list และจัดการ memory

3 ต.ค. 2025

รวมเมนูทั้งหมดเข้ากับ main() (load, display, add, search, update, delete, save, exit)
ทดสอบ flow การใช้งานจากเมนูจนถึงการ save

4 ต.ค. 2025

เพิ่มฟีเจอร์นำเข้า/ส่งออก CSV แบบเลือกไฟล์ (import additional file) และ merge แบบไม่ซ้ำ (ถ้าต้องการ)
เพิ่มการจัดการข้อผิดพลาด (file not found, parse error)

5 ต.ค. 2025

ทำ testing ครบเคส: edge cases เช่น ไม่มีข้อมูล, ชื่อยาวเกิน, วันที่ผิดรูปแบบ, CSV ที่มีช่องว่างเกิน
แก้บั๊กที่เจอ

6 ต.ค. 2025

ทำความสะอาดโค้ด (refactor), เพิ่มคอมเมนต์ และจัดรูปแบบตามมาตรฐาน C
เพิ่มไฟล์ README อธิบายการคอมไพล์และใช้งาน (ตัวอย่างคำสั่ง)

7 ต.ค. 2025

เขียนชุดทดสอบ (manual test plan) และรันครบทุกฟีเจอร์
ถ้าใช้ git ให้เตรียม tag/release เช่น v1.0 เต็มรูปแบบ

8 ต.ค. 2025

ตรวจสอบขั้นสุดท้าย: รวมไฟล์ทั้งหมด, ตรวจว่าทำงานบนเครื่องเป้าหมาย (เช่น Linux/Windows)
เก็บไฟล์ส่ง (zip) และเตรียมคำอธิบายการใช้งานที่สั้นชัด

9 ต.ค. 2025 (วันส่ง)

ตรวจอีกครั้งและส่งงานตามวิธีที่อาจารย์ต้องการ (แนบไฟล์ .c, .h, Makefile, sample.csv, README)
ถ้ามีเวลาสำรอง แก้บั๊กเล็ก ๆ และเพิ่มตัวอย่างผลลัพธ์
